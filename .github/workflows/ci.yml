name: Next.js CI/CD with Docker Build, Test, and Direct Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (for building Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: docker build -t nextjs-app:latest .

      # Step 4: Run tests in the Docker container
      #- name: Test the application in Docker
      #  run: docker run --rm nextjs-app:latest npm run test

      # Step 5: Build the application in Docker (after tests)
      - name: Build application in Docker (after tests)
        run: docker run --rm nextjs-app:latest npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test  # Only run deploy after build-and-test succeeds

    steps:
      # Step 1: Install SSH client
      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      # Step 2: Add SSH private key to authenticate with the server
      - name: Add SSH private key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.NETXJSCICD }}

      # Step 3: Save Docker image to a file
      - name: Save Docker image as tar file
        run: docker save nextjs-app:latest -o nextjs-app.tar

      # Step 4: Copy Docker image to the server
      - name: Copy Docker image to the server
        run: scp -o StrictHostKeyChecking=no nextjs-app.tar root@68.183.94.46:/home/nextjs-app.tar

      # Step 5: Load and run the Docker image on the server
      - name: Deploy Docker image to the server
        run: |
          ssh -o StrictHostKeyChecking=no root@68.183.94.46 << 'EOF'
            # Load the Docker image from the tar file
            docker load -i /home/nextjs-app.tar

            # Stop and remove the existing container if it exists
            docker stop nextjs-app || true
            docker rm nextjs-app || true

            # Run the new container
            docker run -d --name nextjs-app -p 3000:3000 nextjs-app:latest

            # Clean up the tar file
            rm /home/nextjs-app.tar
          EOF
